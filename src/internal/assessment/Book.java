/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internal.assessment;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;

/**
 *
 * @author jatinrughwani
 */
public class Book extends javax.swing.JPanel {
    
    String docID = "";

    /**
     * Creates new form Book
     */
    public Book() {
        initComponents();
        aged.setEditable(false);
        sexd.setEditable(false);
        doc.removeAllItems();
        doc.addItem("-");
        
        try
        {
            FileReader fr = new FileReader ("doctor.txt");
            BufferedReader br = new BufferedReader (fr);
            String oneStu = "";
            
            while ((oneStu = br.readLine()) !=null)
            {
                
                StringTokenizer st = new StringTokenizer (oneStu, ",");
                String a = st.nextToken().trim();
                String b = st.nextToken().trim();
                String c = st.nextToken().trim();
                String d = st.nextToken().trim();
                String e = st.nextToken().trim();
                String f = st.nextToken().trim();
                String g = st.nextToken().trim();

                
                doc.addItem(b + " " + c);
                
            
            }
            br.close();
        }
        
        catch(Exception er)
        {
            System.out.println("System Not Working");
        }
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        doc = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        issue = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        aged = new javax.swing.JTextField();
        sexd = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Doctor");

        jLabel2.setText("Issue:");

        doc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        issue.setColumns(20);
        issue.setRows(5);
        jScrollPane1.setViewportView(issue);

        jLabel3.setText("Date (dd/mm/yy)");

        jLabel4.setText("Doctor Age");

        jLabel5.setText("Doctor Sex");

        jButton2.setText("Doctor Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setText("Book");

        jLabel7.setText("Time (hour:minute)");

        jLabel8.setText("*Please make sure time is in 24 hour format");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(sexd, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(aged, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(doc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(doc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(aged, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(sexd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
if(doc.getSelectedItem().equals("-"))
{
    javax.swing.JOptionPane.showMessageDialog(null, "Please pick a doctor", "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
}
else{
        try
        {
            FileReader fr = new FileReader ("doctor.txt");
            BufferedReader br = new BufferedReader (fr);
            String oneStu = "";
            
            while ((oneStu = br.readLine()) !=null)
            {
                
                StringTokenizer st = new StringTokenizer (oneStu, ",");
                String a = st.nextToken().trim();
                String b = st.nextToken().trim();
                String c = st.nextToken().trim();
                String d = st.nextToken().trim();
                String e = st.nextToken().trim();
                String f = st.nextToken().trim();
                String g = st.nextToken().trim();

                if (doc.getSelectedItem().equals(b + " " + c)){
                    aged.setText(e);
                    sexd.setText(g);
                }
                
            
            }
            br.close();
        }
        
        catch(Exception er)
        {
            System.out.println("System Not Working");
        }
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String ans = "";
String patientLogged = "";
String p = "";
String ae = "";
boolean error = false;
 
                try
                {
                FileReader freee = new FileReader ("appointments.txt");
                BufferedReader breee = new BufferedReader (freee);
                String oneStudent = "";
                
                while((oneStudent = breee.readLine()) !=null){
                StringTokenizer stefe = new StringTokenizer (oneStudent, ",");
                String abcd = stefe.nextToken().trim();
                String bcde = stefe.nextToken().trim();
                String cdef = stefe.nextToken().trim();
                String defg = stefe.nextToken().trim();
                String efgh = stefe.nextToken().trim();
                String fghi = stefe.nextToken().trim();
                String ghij = stefe.nextToken().trim(); 
                String hijk = stefe.nextToken().trim(); 
                String ijkl = stefe.nextToken().trim(); 
                String jklm = stefe.nextToken().trim(); 

                
                try
    {
    FileReader fr = new FileReader ("patientLoggedIn.txt");
    BufferedReader br = new BufferedReader (fr);
    String oneStu = "";
            
    while ((oneStu = br.readLine()) !=null)
    {           
    StringTokenizer st = new StringTokenizer (oneStu, ",");
    String a = st.nextToken().trim();
    String b = st.nextToken().trim();
    String c = st.nextToken().trim();
    String d = st.nextToken().trim();
    String e = st.nextToken().trim();
    String f = st.nextToken().trim();
    String g = st.nextToken().trim();
    int h = Integer.parseInt(st.nextToken());
    
    p = a;
    ae = abcd;
    
    }
    br.close();
    }
    catch(Exception er)
    {
    System.out.println("System Not Working");
    }  
                  
                }

                breee.close();
                }
                catch(Exception errn)
                {
                System.out.println("System Not Working");
                }
            
        if((p.equals(ae)) && (!(ae.equals("")))){
            javax.swing.JOptionPane.showMessageDialog(null, "You have already booked an appointment", "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        else{
            
            if(issue.getText().equals("") && error==false){
                error = true;
                javax.swing.JOptionPane.showMessageDialog(null, "Please enter the issue", "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
            if(date.getText().equals("") && error==false){
                error = true;
                javax.swing.JOptionPane.showMessageDialog(null, "Please enter the desired date", "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
            if(time.getText().equals("")&& error==false){
                error = true;
                javax.swing.JOptionPane.showMessageDialog(null, "Please enter the desired time ", "Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            
     if (error == false){       
        try
 {
FileWriter fw1 = new FileWriter ("appointments.txt",true);
PrintWriter stRecord = new PrintWriter (fw1);

    try
    {
    FileReader fr = new FileReader ("patient.txt");
    BufferedReader br = new BufferedReader (fr);
    String oneStu = "";
            
    while ((oneStu = br.readLine()) !=null)
    {           
    StringTokenizer st = new StringTokenizer (oneStu, ",");
    String a = st.nextToken().trim();
    String b = st.nextToken().trim();
    String c = st.nextToken().trim();
    String d = st.nextToken().trim();
    String e = st.nextToken().trim();
    String f = st.nextToken().trim();
    String g = st.nextToken().trim();
    int h = Integer.parseInt(st.nextToken());

        try
        {
        FileReader fre = new FileReader ("patientLoggedIn.txt");
        BufferedReader bre = new BufferedReader (fre);
        String oneStue = "";
        
        while ((oneStue = bre.readLine()) !=null){
        StringTokenizer ste = new StringTokenizer (oneStue, ",");
        String ab = ste.nextToken().trim();
        String bc = ste.nextToken().trim();
        String cd = ste.nextToken().trim();
        String de = ste.nextToken().trim();
        String ef = ste.nextToken().trim();
        String fg = ste.nextToken().trim();
        String gh = ste.nextToken().trim(); 
        
        
            if (a.equals(ab)){
                
                try
                {
                FileReader free = new FileReader ("doctor.txt");
                BufferedReader bree = new BufferedReader (free);
                String oneStud = "";
                
                while((oneStud = bree.readLine()) !=null){
                StringTokenizer stef = new StringTokenizer (oneStud, ",");
                String abc = stef.nextToken().trim();
                String bcd = stef.nextToken().trim();
                String cde = stef.nextToken().trim();
                String def = stef.nextToken().trim();
                String efg = stef.nextToken().trim();
                String fgh = stef.nextToken().trim();
                String ghi = stef.nextToken().trim(); 
                
                if(doc.getSelectedItem().equals(bcd + " " + cde))
                {
                
                ans = ans + a + "," + b + "," + c + "," + e + "," + g + "," + issue.getText() + "," + date.getText() + "," + time.getText() + "," + abc + "," + "Pending";
                }   
                }

                bree.close();
                }
                catch(Exception erre)
                {
                System.out.println("System Not Workingf");
                }
                
                
                
            }
         
        }
        bre.close();
        }
        catch(Exception err)
        {
        System.out.println("System Not Workingm1");
        }
        
    }
    br.close();
    }
    catch(Exception er)
    {
    System.out.println("System Not Workingm2");
    }  
    
    
              
stRecord.println(ans);
stRecord.close();

}

catch(Exception errr)
{
System.out.println("System Not Workingf");
}
 
 javax.swing.JOptionPane.showMessageDialog(null, "Successful! Please check your booked appointments later to check if your appointment is confirmed.", "Information",
                javax.swing.JOptionPane.INFORMATION_MESSAGE);
 
 doc.setSelectedItem("-");
 aged.setText("");
 sexd.setText("");
 issue.setText("");
 date.setText("");
 time.setText("");
        }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aged;
    private javax.swing.JTextField date;
    private javax.swing.JComboBox<String> doc;
    private javax.swing.JTextArea issue;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField sexd;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables
}
